{"version":3,"sources":["components/Header/Header.module.css","components/Profile/MyPost/MyPosts.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPost/Post/Post.module.css","assets/img/user-avatar.jpg","components/Dialogs/Dialogs.module.css","redux/DialogsReducer.js","api/api.js","redux/ProfileReducer.js","redux/SideBarReducer.js","utils/objectHalpers.js","redux/UsersReducer.js","redux/AuthReducer.js","redux/AppReducer.js","redux/UsersSelector.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","components/HOC/withAuthRedirect.js","container/DialogsContainer.jsx","components/Profile/MyPost/Post/Post.jsx","components/Header/Header.jsx","components/Profile/MyPost/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPost/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Users/Users.jsx","components/Login/Login.jsx","components/Profile/MyPost/MyPosts.jsx","container/MyPostsContainer.jsx","container/NavBarContainer.jsx","components/Navbar/Navbar.jsx","container/UsersContainer.jsx","container/HeaderContainer.jsx","container/ProfileContainer.jsx","App.js","redux/ReduxStore.js","index.js","components/Users/Users.module.css","components/common/FormsControls/FormsControls.module.css"],"names":["module","exports","initialState","messages","id","message","DialogsReducer","state","action","type","newText","newMessageBody","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","posts","likesCount","profile","ProflieReducer","newPost","newPostText","filter","postId","setStatus","users","name","image","updateObjectArray","items","itemId","objPropName","newOnjProps","map","u","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setIsFetching","toggleFollowingProgress","followUnfolloFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuthUserData","initialized","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","DialogItem","props","path","className","s","dialog","linkMessage","to","activeClassName","active","iconProfile","src","alt","nameProfile","Message","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","placeholder","Input","requiredField","value","maxLengthCreator","maxLength","length","maxLength300","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","messageSend","Field","validate","component","mapStateToPropsForRedirect","auth","DialogsContainer","compose","connect","dialogsPage","sideBar","sendMessage","addMessageDialogActionCreator","Component","RedirectComponent","this","React","dialogsElement","d","key","messagesElements","m","dialogs","dialogsItem","blockInfo","values","Post","console","log","item","Header","header","nameLogo","toLogin","onClick","logout","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onBlur","autoFocus","onChange","e","currentTarget","ProfileInfo","profileInfo","Profile","MyPostsContainer","Users","onPageChanged","unFollow","cardUser","avatar","photos","small","userPhoto","cardInfo","followed","disabled","some","btnUnfollow","btnFollow","defaultCurrent","defaultPageSize","total","pagination","LoginReduxForm","formSummaryError","LogContainer","stopSubmit","_error","formData","maxLength10","MyPosts","memo","postsElements","reverse","p","likeCount","AddNewPostFormRedux","addPost","newpost","profilePage","addPostActionCreator","NavbarContainer","usersSiteBar","user","profileSitebar","titleUser","nav","UsersComponent","pageNumber","mapDispatchToProps","bind","page","count","totalCount","UsersContainer","HeaderComponent","HeaderContainer","ProfileComponent","match","params","authorizedUserId","history","push","getUserProfile","ProfileContainer","withRouter","App","initializeApp","exact","render","promise","Promise","all","AppContainer","app","reducers","combineReducers","formReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.13ae3733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"nameLogo\":\"Header_nameLogo__40Xb-\",\"toLogin\":\"Header_toLogin__j6tHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newpost\":\"MyPosts_newpost__2p_rR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\",\"usersSiteBar\":\"Navbar_usersSiteBar__1dPCB\",\"profileSitebar\":\"Navbar_profileSitebar__9eD0W\",\"titleUser\":\"Navbar_titleUser__335GZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ueSlo\"};","module.exports = __webpack_public_path__ + \"static/media/user-avatar.932094ec.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"message\":\"Dialogs_message__1xIDh\",\"iconProfile\":\"Dialogs_iconProfile__2YmwV\",\"nameProfile\":\"Dialogs_nameProfile__30x9d\",\"linkMessage\":\"Dialogs_linkMessage__3HQFR\",\"blockInfo\":\"Dialogs_blockInfo__28h8O\",\"messageSend\":\"Dialogs_messageSend__3tB2u\",\"messages\":\"Dialogs_messages__1w_Up\"};","export const ADD_MESSAGE = \"ADD-MESSAGE\";\n\nlet initialState = {\n  messages: [\n    { id: 1, message: \"Привет))\" },\n    { id: 2, message: \"Привеn!)\" }\n  ]\n};\n\nexport const DialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case UPDATE_NEW_MESSAGE:\n    //   return {\n    //     ...state,\n    //     newMessage: action.newText\n    //   };\n    case ADD_MESSAGE:\n      let newText = action.newMessageBody;\n      return {\n        ...state,\n        messages: [...state.messages, { id: 6, message: newText }]\n      };\n    default:\n      return state;\n  }\n};\n\n// export const updateNewMessageActionCreator = text => ({\n//   type: UPDATE_NEW_MESSAGE,\n//   newText: text\n// });\nexport const addMessageDialogActionCreator = newMessageBody => ({\n  type: ADD_MESSAGE,\n  newMessageBody\n});\n","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"0fbbdfff-809d-4f78-ae6d-e59b4c3fae09\"\n  }\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then(response => {\n        return response.data;\n      });\n  },\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    return profileAPI.getProfile(userId);\n  }\n};\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/${userId}`);\n  },\n  getStatus(userId) {\n    return instance.get(`profile/${userId}`);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status`, { status: status });\n  }\n};\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, { email, password, rememberMe });\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n};\n","import { usersAPI, profileAPI } from \"../api/api\";\n\nexport const ADD_POST = \"ADD-POST\";\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\nexport const SET_STATUS = \"SET_STATUS\";\nexport const DELETE_POST = \"DELETE_POST\";\n\nlet initialState = {\n  posts: [\n    { id: 1, message: \"How are you ? \", likesCount: 111 },\n    { id: 2, message: \"HEY !)\", likesCount: 12 }\n  ],\n  profile: null,\n  status: \"\"\n};\n\nexport const ProflieReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = action.newPostText;\n      return {\n        ...state,\n        posts: [...state.posts, { id: 6, likesCount: 0, message: newPost }]\n      };\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post.id != action.postId)\n      };\n\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status\n      };\n    // let stateCopy = { ...state };\n    // stateCopy.newPost = action.newText;\n    // return stateCopy;\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\n\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\n\n// thunk\nexport const getUserProfile = userId => async dispatch => {\n  let response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\n","let initialState = {\n  users: [\n    {\n      id: 1,\n      name: \"Sveta\",\n      image:\n        \"https://cdn.vox-cdn.com/thumbor/sWVpOoJHOaceo3zN2sPzdNf-Nhc=/0x0:1024x769/1200x800/filters:focal(431x304:593x466)/cdn.vox-cdn.com/uploads/chorus_image/image/65309922/vsco5d069ef5e0929.0.jpg\"\n    },\n    {\n      id: 2,\n      name: \"Vika\",\n      image:\n        \"https://static.bershka.net/4/photos2/2019/V/0/1/p/1966/381/250/1966381250_1_1_3.jpg?t=1554885223409\"\n    },\n    {\n      id: 3,\n      name: \"Anya\",\n      image:\n        \"https://lp2.hm.com/hmgoepprod?set=source[/a9/35/a935b83f97917233cc29b63e1c5a237e1ee7d2e8.jpg],origin[dam],category[ladies_hoodiesswetshirts_sweatshirts],type[LOOKBOOK],res[m],hmver[1]&call=url[file:/product/main]\"\n    }\n  ]\n};\nexport const SideBarReducer = (state = initialState, action) => {\n  return state;\n};\n","export const updateObjectArray = (items, itemId, objPropName, newOnjProps) => {\n  return items.map(u => {\n    if (u[objPropName] === itemId) {\n      return { ...u, newOnjProps };\n    }\n    return u;\n  });\n};\n","import { usersAPI } from \"../api/api\";\nimport { updateObjectArray } from \"../utils/objectHalpers\";\n\nconst SET_USERS = \"SET_USERS\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTTAL_USERS_COUNT = \"SET_TOTTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nexport const UserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n        // users: state.users.map(u => {\n        //   if (u.id === action.userId) {\n        //     return { ...u, followed: true };\n        //   }\n        //   return u;\n        // })\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectArray(state.users, action.userId, \"id\", {\n          followed: false\n        })\n        // users: state.users.map(u => {\n        //   if (u.id === action.userId) {\n        //     return { ...u, followed: false };\n        //   }\n        //   return u;\n        // })\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      };\n    //сюда приходят данные в action из нижних констант\n    case SET_TOTTAL_USERS_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.count\n      };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id != action.userId)\n      };\n    default:\n      return state;\n  }\n};\n\n// сюда приходят action (users)(userId)...приходят из контейнера,\n// попадают в контейнер из тупой-компоненты где был вызван метод или\n// были отправлены пропсами\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const followSuccess = userId => ({\n  userId,\n  type: FOLLOW\n});\nexport const unfollowSuccess = userId => ({\n  userId,\n  type: UNFOLLOW\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalUsersCount => ({\n  type: SET_TOTTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const setIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\n\n//thunk\n//getUsersThunkCreator => getUsers\nexport const requiestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(setIsFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(setIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setUsersTotalCount(data.totalCount));\n  };\n};\n//thunk\n//followUnfolloFlow => забрал дулбирующийся код\nconst followUnfolloFlow = async (\n  dispatch,\n  userId,\n  apiMethod,\n  actionCreator\n) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    let apiMethod = usersAPI.follow.bind(userId);\n    let actionCreator = followSuccess;\n\n    followUnfolloFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};\n//thunk\nexport const unfollow = userId => {\n  return async dispatch => {\n    let apiMethod = usersAPI.unfollow.bind(userId);\n    let actionCreator = unfollowSuccess;\n\n    followUnfolloFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};\n","import { stopSubmit } from \"redux-form\";\n\nimport { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = \"samurai-network/SET_USER_DATA\";\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: { userId, email, login, isAuth }\n});\n\n//thunk\nexport const getAuthUserData = () => async dispatch => {\n  let response = await authAPI.me();\n  if (response.data.resultCode == 0) {\n    let { id, email, login } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\n\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    let message =\n      response.data.messages.length > 0\n        ? response.data.messages[0]\n        : \"Some error\";\n    dispatch(stopSubmit(\"login\", { _error: message }));\n  }\n};\n\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\n","import { getAuthUserData } from \"./AuthReducer\";\n\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n\nlet initialState = {\n  initialized: false\n};\n\n//\nexport const AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  \n  Promise.all([promise])\n  .then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n","import { createSelector } from \"reselect\";\n\nexport const getUsersSelector = state => {\n  return state.usersPage.users;\n};\n\n//Library reselect\n// export const getUsersSuperSelector = createSelector(getUsers, users => {\n//   return users.filter(u => true);\n// });\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true);\n});\n\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\n\nexport const DialogItem = props => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={s.dialog}>\n      <NavLink className={s.linkMessage} to={path} activeClassName={s.active}>\n        <img className={s.iconProfile} src={props.image} alt=\"icon\" />\n        <h6 className={s.nameProfile}>{props.name}</h6>\n      </NavLink>\n    </div>\n  );\n};\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nexport const Message = props => {\n  return <div className={s.message}>{props.message}</div>;\n};\n","import React from \"react\";\n\nimport s from \"./FormsControls.module.css\";\n\nconst FormControl = ({ input, meta, child, ...props }) => {\n  const hasError = meta.touched && meta.error;\n  return (\n    <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\n      <div>{props.children}</div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = props => {\n  //restProps => остаточные пропсы\n  const { input, meta, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} placeholder=\"Post message\" />\n    </FormControl>\n  );\n};\nexport const Input = props => {\n  const { input, meta, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} placeholder=\"Post message\" />\n    </FormControl>\n  );\n};\n\n// export const Input = ({ input, meta, ...props }) => {\n//   const hasError = meta.touched && meta.error;\n//   return (\n//     <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\n//       <div>\n//         <input {...input} {...props} placeholder=\"Post message\" />\n//       </div>\n//       {hasError && <span>{meta.error}</span>}\n//     </div>\n//   );\n// };\n","export const requiredField = value => {\n  if (value) {\n    return undefined;\n  } else if (!value) {\n    return \"Field is required\";\n  }\n};\n\n// thunk validator\nexport const maxLengthCreator = maxLength => value => {\n  if (value.length > maxLength) {\n    return `Max length is ${maxLength}  symbols`;\n  } else {\n    return undefined;\n  }\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { DialogItem } from \"./DialogItem/DialogItem\";\nimport { Message } from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport {\n  requiredField,\n  maxLengthCreator\n} from \"../../utils/validators/validators\";\n\nconst maxLength300 = maxLengthCreator(300);\n\nexport const Dialogs = props => {\n  let dialogsElement = props.sideBar.users.map(d => (\n    <DialogItem name={d.name} image={d.image} key={d.id} id={d.id} />\n  ));\n\n  let messagesElements = props.dialogsPage.messages.map(m => (\n    <Message message={m.message} key={m.id} />\n  ));\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItem}>{dialogsElement}</div>\n      <div className={s.blockInfo}>\n        <div className={s.messages}>{messagesElements}</div>\n        <AddMessageFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.messageSend}>\n        <Field\n          validate={[requiredField, maxLength300]}\n          component={Textarea}\n          name={\"newMessageBody\"}\n          placeholder={\"Enter your message\"}\n        ></Field>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: \"dialogAddMessageForm\"\n})(AddMessageForm);\n\n// ref={newSendMessages}\n// value={props.dialogsPage.newMessage}\n// onChange={onMessageChange}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n  return ConnectedAuthRedirectComponent;\n};\n","import { connect } from \"react-redux\";\nimport {\n  addMessageDialogActionCreator,\n  updateNewMessageActionCreator\n} from \"../redux\";\nimport { Dialogs } from \"../components/Dialogs/Dialogs\";\nimport { withAuthRedirect } from \"../components/HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = state => ({\n  dialogsPage: state.dialogsPage,\n  sideBar: state.sideBar\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendMessage: newMessageBody => {\n    dispatch(addMessageDialogActionCreator(newMessageBody));\n  }\n});\nexport const DialogsContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n ","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nexport const Post = props => {\n  console.log(props.message);\n\n  return (\n    <div className={s.item}>\n      <img src=\"https://www.blexar.com/avatar.png\" alt=\"avatar\" />\n      {props.message}\n      <div className=\"\">\n        <span>like</span>\n      </div>\n    </div>\n  );\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport s from \"./Header.module.css\";\n\nexport const Header = props => {\n  return (\n    <header className={s.header}>\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1037715319496814592/tWCI41hH_400x400.jpg\"\n        alt=\"img\"\n      />\n      <div className={s.nameLogo}>UKontact</div>\n      <div className={s.toLogin}>\n        {props.isAuth ? (\n          <div>\n            {props.login} - <button onClick={props.logout}>Logout</button>\n          </div>\n        ) : (\n          <Link to={\"/login\"}>To Login</Link>\n        )}\n      </div>\n    </header>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport const ProfileStatusWithHooks = props => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    // уведомление о том что что-то изменилось\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = e => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      <div></div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\n        </div>\n      )}\n      {setEditMode && (\n        <div>\n          <input\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            onChange={onStatusChange}\n            value={status}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nimport s from \"./ProfileInfo.module.css\";\n// import { ProfileStatus } from \"./ProfileStatus\";\nimport { ProfileStatusWithHooks } from \"./ProfileStatusWithHooks\";\n\nexport const ProfileInfo = props => {\n  if (props.profile) {\n    return <Spin />;\n  }\n  console.log(props);\n\n  return (\n    <div className={s.profileInfo}>\n      {/* <img src={props.profile.photos.large} /> */}\n      <h3>Статус:</h3>\n      <ProfileStatusWithHooks\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ProfileInfo } from \"./MyPost/ProfileInfo/ProfileInfo\";\nimport { MyPostsContainer } from \"../../container/MyPostsContainer\";\n\nexport const Profile = props => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n","import React from \"react\";\nimport * as axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport { Pagination } from \"antd\";\nimport s from \"./Users.module.css\";\nimport userPhoto from \"../../assets/img/user-avatar.jpg\";\nimport { usersAPI } from \"../../api/api\";\n\nexport const Users = props => {\n  const {\n    pageSize,\n    totalUsersCount,\n    onPageChanged,\n    follow,\n    unFollow,\n    currentPage,\n    toggleFollowingProgress\n  } = props;\n\n\n  return (\n    <div className=\"\">\n      {props.users.map(u => (\n        <div key={u.id} className={s.cardUser}>\n          <Link to={\"/profile/\" + u.id} className={s.avatar}>\n            <img\n              src={u.photos.small != null ? u.photos.small : userPhoto}\n              alt=\"photo\"\n            />\n          </Link>\n          <div className={s.cardInfo}>\n            <h5>{u.name}</h5>\n            <p className={s.status}>\n              <span>Status:</span>\n              {u.status != null ? u.status : \"Тут нет статуса\"}\n            </p>\n          </div>\n          {u.followed ? (\n            <button\n              disabled={toggleFollowingProgress.some(id => id === u.id)}\n              className={s.btnUnfollow}\n              onClick={() => {\n                props.unfollow(u.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              className={s.btnFollow}\n              onClick={() => {\n                props.follow(u.id);\n              }}\n            ></button>\n          )}\n        </div>\n      ))}\n      <Pagination\n        //Данные взяты с UserReducer\n        defaultCurrent={currentPage}\n        defaultPageSize={pageSize}\n        onChange={onPageChanged}\n        total={totalUsersCount}\n        className={s.pagination}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nimport { login } from \"../../redux/index\";\nimport { Input } from \"../index\";\nimport { requiredField } from \"../../utils/validators/validators\";\nimport s from \"../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = (handleSubmit, error) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          placeholder={\"Email\"}\n          name={\"email\"}\n          component={Input}\n          validate={[requiredField]}\n        />\n      </div>\n      <div>\n        <Field\n          placeholder={\"Password\"}\n          name={\"password\"}\n          type={\"password\"}\n          component={Input}\n          validate={[requiredField]}\n        />\n      </div>\n      <div>\n        <Field\n          component={Input}\n          name={\"rememberMe\"}\n          type={\"checkbox\"}\n          validate={[requiredField]}\n        />\n        Remember Me!\n      </div>\n      {error && <div className={s.formSummaryError}>Error , sorry =(</div>}\n      <div>\n        <button>Login </button>\n      </div>\n    </form>\n  );\n};\n//похожая компонента mapstateToProps\nconst LoginReduxForm = reduxForm({\n  form: \"login\"\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const LogContainer = connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nimport s from \"./MyPosts.module.css\";\nimport { Post } from \"./Post/Post\";\nimport {\n  maxLengthCreator,\n  requiredField\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../index\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nexport const MyPosts = React.memo(props => {\n  // При использовании классовой компоненты\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return nextProps != this.props || nextState != this.state;\n  // }\n\n  let postsElements = [...props.posts]\n    .reverse() //перевернула копию массива (мутабельность присуцтвует)\n    .map(p => <Post message={p.message} likeCount={p.likeCount} />);\n  const onAddPost = values => {\n    // Field name={\"newPostText\"} =>values.newPostText\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst AddNewPostForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.newpost}>\n        <Field\n          name={\"newPostText\"}\n          component={Textarea}\n          validate={[requiredField, maxLength10]}\n        />\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\n  AddNewPostForm\n);\n","import { connect } from \"react-redux\";\n\nimport { addPostActionCreator } from \"../redux\";\nimport { MyPosts } from \"../components/Profile/MyPost/MyPosts\";\n\nconst mapStateToProps = state => ({\n  posts: state.profilePage.posts,\n  newPostText: state.profilePage.newPost\n});\nconst mapDispatchToProps = dispatch => ({\n  addPost: newPostText => {\n    dispatch(addPostActionCreator(newPostText));\n  }\n});\n\nexport const MyPostsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyPosts);\n","import { connect } from \"react-redux\";\n\nimport { Navbar } from \"../components/index\";\n\nconst mapStateToProps = state => ({\n  state: state.sideBar\n});\n// const mapDispatchToProps = () => ({});\n\nexport const NavbarContainer = connect(mapStateToProps, null)(Navbar);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport s from \"./Navbar.module.css\";\n\nexport const Navbar = props => {\n  let usersSiteBar = props.state.users.map(user => (\n    <div className={s.profileSitebar} key={user.id}>\n      <img src={user.image} alt=\"icon\" />\n      <h5 className={s.titleUser}>{user.name}</h5>\n    </div>\n  ));\n  return (\n    <div className=\"\">\n      <nav className={s.nav}>\n        <NavLink to=\"/profile\" className={s.item} activeClassName={s.active}>\n          <div>\n            <span className=\"icon-user\"></span>Profile\n          </div>\n        </NavLink>\n        <NavLink to=\"/users\" className={s.item} activeClassName={s.active}>\n          <div>\n            <span className=\"icon-users\"></span>Users\n          </div>\n        </NavLink>\n        <NavLink to=\"/dialogs\" className={s.item} activeClassName={s.active}>\n          <div>\n            <span className=\"icon-mail\"></span>Messenger\n          </div>\n        </NavLink>\n        <NavLink to=\"/News\" className={s.item} activeClassName={s.active}>\n          <div>\n            {\" \"}\n            <span className=\"icon-doc\"></span>News\n          </div>\n        </NavLink>\n        <NavLink to=\"/Music\" className={s.item} activeClassName={s.active}>\n          <div>\n            {\" \"}\n            <span className=\"icon-note-beamed\"></span>Music\n          </div>\n        </NavLink>\n        <NavLink to=\"/movies\" className={s.item} activeClassName={s.active}>\n          <div>\n            <span className=\"icon-videocam\"></span>Movies\n          </div>\n        </NavLink>\n        <NavLink to=\"/Setting\" className={s.item} activeClassName={s.active}>\n          <div>\n            {\" \"}\n            <span className=\"icon-cog-alt\"></span>Setting\n          </div>\n        </NavLink>\n      </nav>\n      <div className={s.usersSiteBar}>{usersSiteBar}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spin } from \"antd\";\n\nimport {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  requiestUsers, // заменен  getUserss\n  getUsers,\n  getTotalUsersCount,\n  getPageSize,\n  getIsFetching,\n  getCurrentPage,\n  getFollowingInProgress\n} from \"../redux/index\";\nimport { Users } from \"../components/index\";\nimport { compose } from \"redux\";\n\nclass UsersComponent extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChanged = pageNumber => {\n    this.props.getUsers(pageNumber, this.props.pageSize);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.isFetching ? <Spin /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n          users={this.props.users}\n          onPageChanged={this.onPageChanged}\n        />\n      </div>\n    );\n  }\n}\n//users: state. ==> usersPage <==this in redux/ReduxStore name in store branch with info for users.\n// const mapStateToProps = state => ({\n//   users: state.usersPage.users,\n//   pageSize: state.usersPage.pageSize,\n//   totalUsersCount: state.usersPage.totalUsersCount,\n//   currentPage: state.usersPage.currentPage,\n//   isFetching: state.usersPage.isFetching,\n//   followingInProgress: state.usersPage.followingInProgress\n// });\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  pageSize: getPageSize(state),\n  totalUsersCount: getTotalUsersCount(state),\n  currentPage: getCurrentPage(state),\n  isFetching: getIsFetching(state),\n  followingInProgress: getFollowingInProgress(state)\n});\n\nconst mapDispatchToProps = {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers: requiestUsers\n};\nexport const UsersContainer = compose(\n  // withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(UsersComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { logout } from \"../redux/index\";\nimport { Header } from \"../components/Header/Header\";\n\nexport class HeaderComponent extends React.Component {\n  render() {\n    return <Header {...this.props} />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n});\nconst mapDispatchToProps = {\n  logout\n};\n\nexport const HeaderContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeaderComponent);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { Profile } from \"../components/Profile/Profile\";\nimport { getUserProfile, getStatus, updateStatus } from \"../redux/index\";\n\nclass ProfileComponent extends React.Component {\n  componentDidMount() {\n    //Не пускает к профилю если не залогинен\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    console.log(this.props.profile);\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\nconst mapDispatchToProps = {\n  getUserProfile,\n  getStatus,\n  updateStatus\n};\n\nexport const ProfileContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n  // withAuthRedirect\n)(ProfileComponent);\n","import React from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\n// import { Spin } from \"antd\";\nimport \"./App.css\";\nimport {\n  DialogsContainer,\n  UsersContainer,\n  NavbarContainer,\n  ProfileContainer,\n  HeaderContainer\n} from \"./container/index\";\nimport { LogContainer } from \"./components\";\nimport { connect } from \"react-redux\";\nimport { initializeApp } from \"./redux/index\";\n\n// const DialogsContainer = React.lazy(\n//   async () => await import(\"./container/index\")\n// );\n// const ProfileContainer = React.lazy(() => import(\"./container/index\"));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    // if (!this.props.initialized) {\n    //   return <Spin />;\n    // }\n    return (\n      <div className=\"wrapper\">\n        <HeaderContainer />\n        <NavbarContainer />\n        <div className=\"app-wrapper-content\">\n          <Route exact path=\"/dialogs\" render={() => <DialogsContainer />} />\n\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <LogContainer />} />\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  initialized: state.app.initialized\n});\n\nconst mapDispatchToProps = {\n  initializeApp\n};\nexport const AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(App);\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport {\n  ProflieReducer,\n  DialogsReducer,\n  SideBarReducer,\n  UserReducer,\n  AppReducer\n} from \"./index\";\nimport { AuthReducer } from \"./AuthReducer\";\n\nlet reducers = combineReducers({\n  dialogsPage: DialogsReducer,\n  profilePage: ProflieReducer,\n  sideBar: SideBarReducer,\n  usersPage: UserReducer,\n  auth: AuthReducer,\n  form: formReducer,\n  app: AppReducer\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  reducers,\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\nwindow.store = store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n// import DatePicker from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { AppContainer } from \"./App\";\nimport \"./index.css\";\nimport { store } from \"./redux/ReduxStore\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardUser\":\"Users_cardUser__3ZPpq\",\"avatar\":\"Users_avatar__gHOlh\",\"btnUnfollow\":\"Users_btnUnfollow__2PiGX\",\"btnFollow\":\"Users_btnFollow__16kPM\",\"status\":\"Users_status__E0SMG\",\"city\":\"Users_city__2J85Q\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"pagination\":\"Users_pagination__2Njh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};"],"sourceRoot":""}